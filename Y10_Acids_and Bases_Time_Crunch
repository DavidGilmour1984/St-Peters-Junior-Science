<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Acids and Bases Quiz</title>
  <style>
    body {
      font-family: Helvetica, sans-serif;
      background-color: #f5f5f5;
      padding: 1em;
      text-align: center;
    }

    .card {
      background: white;
      padding: 2em;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      max-width: 1000px;
      margin: auto;
    }

    #timer {
      font-size: 1.5rem;
      margin-bottom: 1em;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 0.3em;
    }

    th, td {
      padding: 5px;
      border: 1px solid #ccc;
      text-align: center;
    }

    .blank {
      background-color: #e0e0e0;
      min-height: 30px;
      border-radius: 6px;
      font-weight: bold;
    }

    .draggable {
      background: #d9edf7;
      border-radius: 8px;
      padding: 5px;
      cursor: grab;
      font-size: 1rem;
      user-select: none;
    }

    .draggable:hover {
      background: #c4e3f3;
    }

    .word-bank {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 5px;
      margin-top: 10px;
    }

    button {
      margin-top: 1em;
      padding: 0.3em 1.6em;
      font-size: 1rem;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      background-color: #28a745;
      color: white;
      transition: background 0.3s;
    }

    button:hover {
      background-color: #218838;
    }

    .button-row {
      display: flex;
      justify-content: center;
      gap: 15px;
    }
  </style>
</head>
<body>
  <div class="card">
    <h2>Drag-and-Drop Acid & Base Speed Run</h2>
    <div id="timer">Time: <span id="timer-display">0.00</span> seconds
      <button onclick="checkAnswers()">Check Answers</button>
  <button onclick="restartQuiz()">Restart</button>
  </div>

<table>
  <thead>
    <tr>
      <th>Common Use</th>
      <th>Chemical Name</th>
      <th>Formula</th>
      <th>Acid or Base</th>
    </tr>
  </thead>
  <tbody id="quiz-table">
    <tr>
      <td>Battery Acid</td>
      <td class="blank" id="q1" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q2" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q3" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
    </tr>
    <tr>
      <td>Stomach Acid</td>
      <td class="blank" id="q4" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q5" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q6" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
    </tr>
    <tr>
      <td>Fertilizer and Explosives</td>
      <td class="blank" id="q7" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q8" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q9" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
    </tr>
    <tr>
      <td>Drain Cleaner</td>
      <td class="blank" id="q10" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q11" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q12" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
    </tr>
    <tr>
      <td>Baking and Cleaning</td>
      <td class="blank" id="q13" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q14" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q15" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
    </tr>
    <tr>
      <td>Antacid and Chalk</td>
      <td class="blank" id="q16" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q17" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
      <td class="blank" id="q18" ondragover="allowDrop(event)" ondrop="drop(event)"></td>
    </tr>
  </tbody>
</table>

<div class="word-bank" id="word-bank"></div>

<div class="button-row">

</div>

<script>
const wordList = [
  "Sulfuric Acid", "H₂SO₄", "Acid",
  "Hydrochloric Acid", "HCl", "Acid",
  "Nitric Acid", "HNO₃", "Acid",
  "Sodium Hydroxide", "NaOH", "Base",
  "Sodium Hydrogen Carbonate", "NaHCO₃", "Base",
  "Calcium Carbonate", "CaCO₃", "Base"
];

const correctAnswers = {
  "q1": "Sulfuric Acid",
  "q2": "H₂SO₄",
  "q3": "Acid",
  "q4": "Hydrochloric Acid",
  "q5": "HCl",
  "q6": "Acid",
  "q7": "Nitric Acid",
  "q8": "HNO₃",
  "q9": "Acid",
  "q10": "Sodium Hydroxide",
  "q11": "NaOH",
  "q12": "Base",
  "q13": "Sodium Hydrogen Carbonate",
  "q14": "NaHCO₃",
  "q15": "Base",
  "q16": "Calcium Carbonate",
  "q17": "CaCO₃",
  "q18": "Base"
};

let timerInterval;
let startTime;
let isStarted = false;
let wordCounter = 0;

function allowDrop(ev) {
  ev.preventDefault();
}

function drag(ev) {
  ev.dataTransfer.setData("text", ev.target.id);
}

function drop(ev) {
  ev.preventDefault();
  const wordId = ev.dataTransfer.getData("text");
  const dragged = document.getElementById(wordId);

  if (ev.target.classList.contains("blank") && ev.target.children.length === 0) {
    const clone = dragged.cloneNode(true);
    clone.id = wordId + "-placed"; // make unique
    clone.ondragstart = drag;
    ev.target.appendChild(clone);
    dragged.remove();
    if (!isStarted) startTimer();
  }
}

function startTimer() {
  isStarted = true;
  startTime = Date.now();
  timerInterval = setInterval(() => {
    const elapsed = (Date.now() - startTime) / 1000;
    document.getElementById("timer-display").textContent = elapsed.toFixed(2);
  }, 50);
}

function stopTimer() {
  clearInterval(timerInterval);
}

function checkAnswers() {
  let correct = 0;
  const incorrectWords = [];

  for (const id in correctAnswers) {
    const cell = document.getElementById(id);
    const word = cell.firstChild ? cell.firstChild.getAttribute("data-word") : "";
    if (word === correctAnswers[id]) {
      cell.style.backgroundColor = "#a0e6a0";
      correct++;
    } else {
      cell.style.backgroundColor = "#e6a0a0";
      if (cell.firstChild) {
        incorrectWords.push(correctAnswers[id]);
        cell.removeChild(cell.firstChild);
      }
    }
  }

  if (correct === Object.keys(correctAnswers).length) {
    stopTimer();
  }

  populateWordBankWithRemaining();
  populateWordBankWithIncorrect(incorrectWords);
}

function populateWordBankWithRemaining() {
  const bank = document.getElementById("word-bank");
  bank.innerHTML = "";
  const usedWords = [];
  const cells = document.querySelectorAll('.blank');
  
  // Gather all words that have been placed in the table already
  cells.forEach(cell => {
    if (cell.firstChild) {
      usedWords.push(cell.firstChild.getAttribute("data-word"));
    }
  });

  // Only add words that are not used
  const remainingWords = wordList.filter(word => !usedWords.includes(word));
  remainingWords.forEach(word => {
    const div = document.createElement("div");
    div.className = "draggable";
    div.draggable = true;
    div.id = `word-${wordCounter++}`; // unique ID
    div.textContent = word;
    div.setAttribute("data-word", word); // store actual word
    div.ondragstart = drag;
    bank.appendChild(div);
  });
}

function populateWordBankWithIncorrect(words) {
  const bank = document.getElementById("word-bank");
  words.forEach(word => {
    const div = document.createElement("div");
    div.className = "draggable";
    div.draggable = true;
    div.id = `retry-${wordCounter++}`; // ensure unique ID
    div.textContent = word;
    div.setAttribute("data-word", word);
    div.ondragstart = drag;
    bank.appendChild(div);
  });
}

function restartQuiz() {
  stopTimer();
  document.getElementById("timer-display").textContent = "0.00";
  isStarted = false;

  for (const id in correctAnswers) {
    const cell = document.getElementById(id);
    if (cell.firstChild) {
      cell.removeChild(cell.firstChild);
    }
    cell.style.backgroundColor = "#e0e0e0";
  }

  populateWordBank();
}

function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}

function populateWordBank() {
  const bank = document.getElementById("word-bank");
  bank.innerHTML = "";
  wordCounter = 0;
  const shuffled = [...wordList];
  shuffleArray(shuffled);

  shuffled.forEach(word => {
    const div = document.createElement("div");
    div.className = "draggable";
    div.draggable = true;
    div.id = `word-${wordCounter++}`; // unique ID
    div.textContent = word;
    div.setAttribute("data-word", word); // store actual word
    div.ondragstart = drag;
    bank.appendChild(div);
  });
}

window.onload = populateWordBank;
</script>

</body>
</html>
